#!/bin/bash

# Set Colors (optional)
source /src/sdlc/colors || { echo -e "\033[0;31mError: Colors file not found. Proceeding without colors.\033[0m"; }

# Exit immediately if a command exits with a non-zero status
set -e

# Function to load environment variables from .env file
load_env() {
    if [ -f "/src/.env" ]; then
        echo -e "${GREEN:-\033[0;32m}Loading secrets from .env file...${NC:-\033[0m}"
        export $(cat /src/.env | sed 's/#.*//g' | xargs)
    else
        echo -e "${RED:-\033[0;31m}Error: .env file not found in /src/.env${NC:-\033[0m}"
        exit 1
    fi
}

# Run GitHub Actions simulation
run_github_actions() {
    local job_name=$1
    echo -e "${YELLOW:-\033[0;33m}Running $job_name job...${NC:-\033[0m}"

    # Load environment variables before running act
    load_env

    act -W /src/.github/workflows/ci.yml \
        --container-architecture linux/amd64 \
        -P ubuntu-latest=ghcr.io/catthehacker/ubuntu:act-latest \
        --env-file=/src/.env \
        --secret DOCKER_USERNAME="$DOCKER_USERNAME" \
        --secret DOCKER_ACCESS_TOKEN="$DOCKER_ACCESS_TOKEN" \
        --secret APP_NAME="$(grep APP_NAME /src/.env | cut -d '=' -f2)" \
        --job "$job_name"

    echo -e "${GREEN:-\033[0;32m}$job_name job completed successfully!${NC:-\033[0m}"
}

# Main Script Execution
main() {
    # Trap errors to display a final error message
    trap 'echo -e "${RED:-\033[0;31m}GitHub Actions simulation exited with an error.${NC:-\033[0m}"; exit 1' ERR

    # Run GitHub Actions jobs
    run_github_actions check_code
    run_github_actions verify_docker

    # If all jobs pass
    echo -e "${GREEN:-\033[0;32m}GitHub Actions simulation completed successfully!${NC:-\033[0m}"
}

# Execute main function
main
